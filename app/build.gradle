apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "site.hanschen.pretty"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('../keystore/release.keystore')
            storePassword getProperty('store.password', 'STORE_PASSWORD')
            keyAlias getProperty('store.key.alias', 'KEY_ALIAS')
            keyPassword getProperty('store.key.password', 'KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        travis {
            initWith release
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = String.format('%s_%s_%s_%s.apk', 'Pretty', getVersionName(), getDate(), variant.buildType.name)
        }
    }
}

def getDate() {
    return new Date().format('yyyyMMdd', TimeZone.getTimeZone('GMT+8'))
}

def getVersionName() {
    return 'v' + android.defaultConfig.versionName
}

def getProperty(String propertyName, String envName) {
    try {
        def property = project.hasProperty(propertyName) ? project.property(propertyName) : System.getenv(envName)
        if (property == null) {
            throw new NullPointerException();
        }
        return property
    } catch (Throwable ignored) {
        def message = String.format('********************************************************************************\n' +
                'You need define %s in gradle.properties or set environment variable: %s\n' +
                '********************************************************************************\n', propertyName, envName)
        throw new RuntimeException(message)
    }
}

greendao {
    schemaVersion 1
    daoPackage 'site.hanschen.pretty.db.gen'
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    travisImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:support-v13:26.1.0'

    implementation 'site.hanschen:common:1.0.9'

    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    implementation 'com.squareup.okhttp3:okhttp:3.7.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation 'com.pnikosis:materialish-progress:1.7'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'org.greenrobot:greendao:3.2.2'
}
